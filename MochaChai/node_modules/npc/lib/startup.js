'use strict';

var path = require('path');
var fs = require('fs');
var async = require('async');

var candidates = [
    { start: 'index.js', args: [] },
    { start: 'server.js', args: [] },
    { start: 'app.js', args: [] }
];

exports.init = function (root, cb) {
    var app = {
        root: root || '',
        start: '',
        args: '',
        pkg: {}
    };

    fs.stat(app.root, function (err, stat) {
        if (err || !stat.isDirectory()) {
            return cb('NO_EXISTS', {});
        }

        var pkgPath = path.join(app.root, 'package.json');
        fs.access(pkgPath, fs.R_OK, function (err) {
            if (!err) {
                app.pkg = require(pkgPath);
                var args = app.pkg && app.pkg.scripts && app.pkg.scripts.start
                    && app.pkg.scripts.start.split(' ');

                if (args && args.length) {
                    var exec = args.shift() || '';
                    app.start = args.shift() || '';
                    app.args = args || [];

                    return exec === 'node' ? cb(null, app) : cb('INVALID_PKG', {});
                }
            }

            for(var k in candidates) {
                candidates[k] = path.join(app.root, candidates[k]);
            }

            async.filter(candidates, fs.exists, function (results) {
                app.start = !err && results.length ? path.basename(results.shift()) : false;
                return !!app.start ? cb(null, app) : cb('NO_START', {});
            });
        });
    });
};
